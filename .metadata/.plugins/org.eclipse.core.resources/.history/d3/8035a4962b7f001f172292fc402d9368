package DiamondShop.Controller.User;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import DiamondShop.Dto.PaginatesDto;
import DiamondShop.Service.User.CategoryServiceImpl;
import DiamondShop.Service.User.PaginatesServiceImpl;

@Controller
public class CategoryController extends BaseController {
    @Autowired
    private CategoryServiceImpl categoryServiceImpl;

    @Autowired
    private PaginatesServiceImpl paginatesServiceImpl;

    private int totalProductsPage = 9;

    // Xử lý khi không có {id} trong URL và hiển thị sản phẩm của một danh mục mặc định
    @RequestMapping(value = "/san-pham")
    public ModelAndView showProducts() {
        // Mặc định sử dụng id của danh mục (ví dụ id = 1)
        String defaultCategoryId = "1";
        return Product(defaultCategoryId, "1"); // Mặc định currentPage là 1
    }

    // Xử lý khi chỉ có id của danh mục trong URL
    @RequestMapping(value = "/san-pham/{id}")
    public ModelAndView Product(@PathVariable String id) {
        _mvShare.setViewName("user/products/category");
        int totalData = categoryServiceImpl.GetAllProductsByID(Integer.parseInt(id)).size();
        PaginatesDto paginatesInfo = paginatesServiceImpl.GetInfoPaginates(totalData, totalProductsPage, 1);
        _mvShare.addObject("idCategory", id);
        _mvShare.addObject("paginatesInfo", paginatesInfo);
        _mvShare.addObject("productsPaginate", categoryServiceImpl.GetDataProductsPaginate(Integer.parseInt(id), paginatesInfo.getStart(), totalProductsPage));
        return _mvShare;
    }

    // Xử lý khi có cả id và currentPage trong URL
    @RequestMapping(value = "/san-pham/{id}/{currentPage}")
    public ModelAndView Product(@PathVariable String id, @PathVariable String currentPage) {
        _mvShare.setViewName("user/products/category");
        int totalData = categoryServiceImpl.GetAllProductsByID(Integer.parseInt(id)).size();
        PaginatesDto paginatesInfo = paginatesServiceImpl.GetInfoPaginates(totalData, totalProductsPage, Integer.parseInt(currentPage));
        _mvShare.addObject("idCategory", id);
        _mvShare.addObject("paginatesInfo", paginatesInfo);
        _mvShare.addObject("productsPaginate", categoryServiceImpl.GetDataProductsPaginate(Integer.parseInt(id), paginatesInfo.getStart(), totalProductsPage));
        return _mvShare;
    }
}
